// Generated from impl.g4 by ANTLR 4.13.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class implLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, SINGLELINE=13, MULTILINECOMMENT=14, WHITESPACE=15, 
		AND=16, OR=17, INT=18, NORMALTEXT=19;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "SINGLELINE", "MULTILINECOMMENT", "WHITESPACE", 
			"AND", "OR", "INT", "NORMALTEXT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'.hardware '", "'.inputs '", "'.outputs '", "'.latches'", "'.simulate'", 
			"'.update'", "' '", "' -> '", "'='", "'!'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, "SINGLELINE", "MULTILINECOMMENT", "WHITESPACE", "AND", "OR", "INT", 
			"NORMALTEXT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public implLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "impl.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0013\u00c5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\f\u0001\f\u0005\ft\b\f\n\f\f\fw\t\f\u0001\f\u0005"+
		"\fz\b\f\n\f\f\f}\t\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0005\r\u0087\b\r\n\r\f\r\u008a\t\r\u0001\r\u0001\r\u0001\r"+
		"\u0001\r\u0005\r\u0090\b\r\n\r\f\r\u0093\t\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0004\u000e\u0098\b\u000e\u000b\u000e\f\u000e\u0099\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0005\u000f\u009f\b\u000f\n\u000f\f\u000f\u00a2\t\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0005\u000f\u00a8\b\u000f"+
		"\n\u000f\f\u000f\u00ab\t\u000f\u0001\u0010\u0005\u0010\u00ae\b\u0010\n"+
		"\u0010\f\u0010\u00b1\t\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0005\u0010\u00b7\b\u0010\n\u0010\f\u0010\u00ba\t\u0010\u0001\u0011"+
		"\u0004\u0011\u00bd\b\u0011\u000b\u0011\f\u0011\u00be\u0001\u0012\u0004"+
		"\u0012\u00c2\b\u0012\u000b\u0012\f\u0012\u00c3\u0000\u0000\u0013\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\u0001\u0000\u0006\u0001\u0000"+
		"\n\n\u0001\u0000**\u0001\u0000//\u0003\u0000\t\n\r\r  \u0001\u000009\u0004"+
		"\u000009AZ__az\u00d0\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0001\'\u0001\u0000\u0000\u0000\u00032\u0001"+
		"\u0000\u0000\u0000\u0005;\u0001\u0000\u0000\u0000\u0007E\u0001\u0000\u0000"+
		"\u0000\tN\u0001\u0000\u0000\u0000\u000bX\u0001\u0000\u0000\u0000\r`\u0001"+
		"\u0000\u0000\u0000\u000fb\u0001\u0000\u0000\u0000\u0011g\u0001\u0000\u0000"+
		"\u0000\u0013i\u0001\u0000\u0000\u0000\u0015k\u0001\u0000\u0000\u0000\u0017"+
		"m\u0001\u0000\u0000\u0000\u0019o\u0001\u0000\u0000\u0000\u001b\u0080\u0001"+
		"\u0000\u0000\u0000\u001d\u0097\u0001\u0000\u0000\u0000\u001f\u00a0\u0001"+
		"\u0000\u0000\u0000!\u00af\u0001\u0000\u0000\u0000#\u00bc\u0001\u0000\u0000"+
		"\u0000%\u00c1\u0001\u0000\u0000\u0000\'(\u0005.\u0000\u0000()\u0005h\u0000"+
		"\u0000)*\u0005a\u0000\u0000*+\u0005r\u0000\u0000+,\u0005d\u0000\u0000"+
		",-\u0005w\u0000\u0000-.\u0005a\u0000\u0000./\u0005r\u0000\u0000/0\u0005"+
		"e\u0000\u000001\u0005 \u0000\u00001\u0002\u0001\u0000\u0000\u000023\u0005"+
		".\u0000\u000034\u0005i\u0000\u000045\u0005n\u0000\u000056\u0005p\u0000"+
		"\u000067\u0005u\u0000\u000078\u0005t\u0000\u000089\u0005s\u0000\u0000"+
		"9:\u0005 \u0000\u0000:\u0004\u0001\u0000\u0000\u0000;<\u0005.\u0000\u0000"+
		"<=\u0005o\u0000\u0000=>\u0005u\u0000\u0000>?\u0005t\u0000\u0000?@\u0005"+
		"p\u0000\u0000@A\u0005u\u0000\u0000AB\u0005t\u0000\u0000BC\u0005s\u0000"+
		"\u0000CD\u0005 \u0000\u0000D\u0006\u0001\u0000\u0000\u0000EF\u0005.\u0000"+
		"\u0000FG\u0005l\u0000\u0000GH\u0005a\u0000\u0000HI\u0005t\u0000\u0000"+
		"IJ\u0005c\u0000\u0000JK\u0005h\u0000\u0000KL\u0005e\u0000\u0000LM\u0005"+
		"s\u0000\u0000M\b\u0001\u0000\u0000\u0000NO\u0005.\u0000\u0000OP\u0005"+
		"s\u0000\u0000PQ\u0005i\u0000\u0000QR\u0005m\u0000\u0000RS\u0005u\u0000"+
		"\u0000ST\u0005l\u0000\u0000TU\u0005a\u0000\u0000UV\u0005t\u0000\u0000"+
		"VW\u0005e\u0000\u0000W\n\u0001\u0000\u0000\u0000XY\u0005.\u0000\u0000"+
		"YZ\u0005u\u0000\u0000Z[\u0005p\u0000\u0000[\\\u0005d\u0000\u0000\\]\u0005"+
		"a\u0000\u0000]^\u0005t\u0000\u0000^_\u0005e\u0000\u0000_\f\u0001\u0000"+
		"\u0000\u0000`a\u0005 \u0000\u0000a\u000e\u0001\u0000\u0000\u0000bc\u0005"+
		" \u0000\u0000cd\u0005-\u0000\u0000de\u0005>\u0000\u0000ef\u0005 \u0000"+
		"\u0000f\u0010\u0001\u0000\u0000\u0000gh\u0005=\u0000\u0000h\u0012\u0001"+
		"\u0000\u0000\u0000ij\u0005!\u0000\u0000j\u0014\u0001\u0000\u0000\u0000"+
		"kl\u0005(\u0000\u0000l\u0016\u0001\u0000\u0000\u0000mn\u0005)\u0000\u0000"+
		"n\u0018\u0001\u0000\u0000\u0000op\u0005/\u0000\u0000pq\u0005/\u0000\u0000"+
		"qu\u0001\u0000\u0000\u0000rt\b\u0000\u0000\u0000sr\u0001\u0000\u0000\u0000"+
		"tw\u0001\u0000\u0000\u0000us\u0001\u0000\u0000\u0000uv\u0001\u0000\u0000"+
		"\u0000v{\u0001\u0000\u0000\u0000wu\u0001\u0000\u0000\u0000xz\u0007\u0000"+
		"\u0000\u0000yx\u0001\u0000\u0000\u0000z}\u0001\u0000\u0000\u0000{y\u0001"+
		"\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|~\u0001\u0000\u0000\u0000"+
		"}{\u0001\u0000\u0000\u0000~\u007f\u0006\f\u0000\u0000\u007f\u001a\u0001"+
		"\u0000\u0000\u0000\u0080\u0081\u0005/\u0000\u0000\u0081\u0082\u0005*\u0000"+
		"\u0000\u0082\u0088\u0001\u0000\u0000\u0000\u0083\u0087\b\u0001\u0000\u0000"+
		"\u0084\u0085\u0005*\u0000\u0000\u0085\u0087\b\u0002\u0000\u0000\u0086"+
		"\u0083\u0001\u0000\u0000\u0000\u0086\u0084\u0001\u0000\u0000\u0000\u0087"+
		"\u008a\u0001\u0000\u0000\u0000\u0088\u0086\u0001\u0000\u0000\u0000\u0088"+
		"\u0089\u0001\u0000\u0000\u0000\u0089\u008b\u0001\u0000\u0000\u0000\u008a"+
		"\u0088\u0001\u0000\u0000\u0000\u008b\u008c\u0005*\u0000\u0000\u008c\u008d"+
		"\u0005/\u0000\u0000\u008d\u0091\u0001\u0000\u0000\u0000\u008e\u0090\u0007"+
		"\u0000\u0000\u0000\u008f\u008e\u0001\u0000\u0000\u0000\u0090\u0093\u0001"+
		"\u0000\u0000\u0000\u0091\u008f\u0001\u0000\u0000\u0000\u0091\u0092\u0001"+
		"\u0000\u0000\u0000\u0092\u0094\u0001\u0000\u0000\u0000\u0093\u0091\u0001"+
		"\u0000\u0000\u0000\u0094\u0095\u0006\r\u0000\u0000\u0095\u001c\u0001\u0000"+
		"\u0000\u0000\u0096\u0098\u0007\u0003\u0000\u0000\u0097\u0096\u0001\u0000"+
		"\u0000\u0000\u0098\u0099\u0001\u0000\u0000\u0000\u0099\u0097\u0001\u0000"+
		"\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000"+
		"\u0000\u0000\u009b\u009c\u0006\u000e\u0000\u0000\u009c\u001e\u0001\u0000"+
		"\u0000\u0000\u009d\u009f\u0005 \u0000\u0000\u009e\u009d\u0001\u0000\u0000"+
		"\u0000\u009f\u00a2\u0001\u0000\u0000\u0000\u00a0\u009e\u0001\u0000\u0000"+
		"\u0000\u00a0\u00a1\u0001\u0000\u0000\u0000\u00a1\u00a3\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a0\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005&\u0000\u0000"+
		"\u00a4\u00a5\u0005&\u0000\u0000\u00a5\u00a9\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a8\u0005 \u0000\u0000\u00a7\u00a6\u0001\u0000\u0000\u0000\u00a8\u00ab"+
		"\u0001\u0000\u0000\u0000\u00a9\u00a7\u0001\u0000\u0000\u0000\u00a9\u00aa"+
		"\u0001\u0000\u0000\u0000\u00aa \u0001\u0000\u0000\u0000\u00ab\u00a9\u0001"+
		"\u0000\u0000\u0000\u00ac\u00ae\u0005 \u0000\u0000\u00ad\u00ac\u0001\u0000"+
		"\u0000\u0000\u00ae\u00b1\u0001\u0000\u0000\u0000\u00af\u00ad\u0001\u0000"+
		"\u0000\u0000\u00af\u00b0\u0001\u0000\u0000\u0000\u00b0\u00b2\u0001\u0000"+
		"\u0000\u0000\u00b1\u00af\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005|\u0000"+
		"\u0000\u00b3\u00b4\u0005|\u0000\u0000\u00b4\u00b8\u0001\u0000\u0000\u0000"+
		"\u00b5\u00b7\u0005 \u0000\u0000\u00b6\u00b5\u0001\u0000\u0000\u0000\u00b7"+
		"\u00ba\u0001\u0000\u0000\u0000\u00b8\u00b6\u0001\u0000\u0000\u0000\u00b8"+
		"\u00b9\u0001\u0000\u0000\u0000\u00b9\"\u0001\u0000\u0000\u0000\u00ba\u00b8"+
		"\u0001\u0000\u0000\u0000\u00bb\u00bd\u0007\u0004\u0000\u0000\u00bc\u00bb"+
		"\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000\u0000\u0000\u00be\u00bc"+
		"\u0001\u0000\u0000\u0000\u00be\u00bf\u0001\u0000\u0000\u0000\u00bf$\u0001"+
		"\u0000\u0000\u0000\u00c0\u00c2\u0007\u0005\u0000\u0000\u00c1\u00c0\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3\u00c1\u0001"+
		"\u0000\u0000\u0000\u00c3\u00c4\u0001\u0000\u0000\u0000\u00c4&\u0001\u0000"+
		"\u0000\u0000\r\u0000u{\u0086\u0088\u0091\u0099\u00a0\u00a9\u00af\u00b8"+
		"\u00be\u00c3\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}